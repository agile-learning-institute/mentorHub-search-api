openapi: 3.0.3
servers:
  - url: http://localhost:8081
  - url: http://localhost:9200
info:
  title: search API
  description: |-
    This is a super simple API for searching on mentorhub
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
paths:
  /api/search/:
    get:
      summary: Search Elasticsearch database
      parameters:
        - name: query
          in: header
          description: "Search query value"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          headers:
            Link:
              description: "Links to the next and previous pages for infinite scroll"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: "Invalid request. Check your query parameters."
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                error: "Internal server error. Please try again later."
        '504':
          description: Search Request timed_out
          content:
            application/json:
              example:
                error: "Search database response has timed out. Please try again later."
  /api/health/:
    get:
      summary: Prometheus Healthcheck endpoint
      operationId: getHealth
      responses:
        '200':
          description: Successful operation
  /api/config/:
    get:
      summary: Get API Configuration Information
      operationId: getConfig
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'     
  

components:
  schemas:
    SearchResponse:
      type: array
      items:
        type: object
        additionalProperties: true
        description: Dynamic keys/fields allowed
        properties:
          name:
            type: string
          status: 
            type: string
          ID:
            type: string
          collection:
            type: string
              
    Config:
      type: object
      properties:
        apiVersion:
          type: string
          description: Semantic Version Number
        ConfigItems:
          type: array
          items:
            type: object
            properties:
              name:
                description: Conf Item Name (Env Var Name, File Name)
                type: string
              value:
                description: The value for that config item
                type: string
              from:
                description: Where the value was found
                type: string
                enum:
                  - default
                  - environment
                  - file

